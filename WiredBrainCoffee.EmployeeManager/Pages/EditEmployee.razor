@page "/employees/edit/{employeeId:int}"
@inject IDbContextFactory<EmployeeManagerDbContext> ContextFactory;

<PageTitle>Edit Employee</PageTitle>
<h1>Edit Employee</h1>


@if (Employee is null && !IsBusy)
{
    <div class="alert alert-danger">Employee with @EmployeeId was not found.</div>
}
else
{
    <EmployeeForm Employee="@Employee"
              IsBusy="@IsBusy" />
}

@code {
    [Parameter]
    public int EmployeeId { get; set; }

    private Employee? Employee { get; set; }

    private bool IsBusy { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        IsBusy = true;
        try
        {
            using var context = ContextFactory.CreateDbContext();
            Employee = await context.Employees
                .FirstOrDefaultAsync(emp => emp.Id == EmployeeId);
        }
        finally
        {
            IsBusy = false;
        }


    }
}

